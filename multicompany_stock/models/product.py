from odoo import models, fields, api


class ProductTemplate(models.Model):
    _inherit = 'product.template'

    property_stock_procurement = fields.Many2one(readonly=True)
    property_stock_production = fields.Many2one(readonly=True)
    property_stock_inventory = fields.Many2one(readonly=True)


class ProductProperty(models.TransientModel):
    _inherit = 'product.template.property'

    property_stock_procurement = fields.Many2one(
        'stock.location', "Procurement Location",
        compute='get_properties', inverse='set_property_stock_procurement', domain=[('usage', 'like', 'procurement')],
        help="This stock location will be used, instead of the default one, as the source location for stock moves generated by procurements.")
    property_stock_production = fields.Many2one(
        'stock.location', "Production Location",
        compute='get_properties', inverse='set_property_stock_production', domain=[('usage', 'like', 'production')],
        help="This stock location will be used, instead of the default one, as the source location for stock moves generated by manufacturing orders.")
    property_stock_inventory = fields.Many2one(
        'stock.location', "Inventory Location",
        compute='get_properties', inverse='set_property_stock_inventory', domain=[('usage', 'like', 'inventory')],
        help="This stock location will be used, instead of the default one, as the source location for stock moves generated when you do an inventory.")

    @api.one
    def get_property_fields(self, object, properties):
        super(ProductProperty, self).get_property_fields(object, properties)
        self.property_stock_procurement = self.get_property_value('property_stock_procurement', object, properties)
        self.property_stock_production = self.get_property_value('property_stock_production', object, properties)
        self.property_stock_inventory = self.get_property_value('property_stock_inventory', object, properties)

    @api.one
    def set_property_stock_procurement(self):
        self.set_property_value(self.product_template_id, 'property_stock_procurement', self.property_stock_procurement)

    @api.one
    def set_property_stock_production(self):
        self.set_property_value(self.product_template_id, 'property_stock_production', self.property_stock_production)

    @api.one
    def set_property_stock_inventory(self):
        self.set_property_value(self.product_template_id, 'property_stock_inventory', self.property_stock_inventory)
